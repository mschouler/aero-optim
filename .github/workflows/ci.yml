name: Continuous Integration
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
permissions:
  contents: write
jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 *.py
          flake8 src
          flake8 tests

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install mypy
        run: |
          python -m pip install --upgrade pip
          pip install mypy
      - name: Lint with mypy
        run: |
          mypy *.py
          mypy src
          mypy tests

  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          sudo apt-get install libglu1
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov
      - name: Unit tests
        run: |
          echo "\`\`\`sh" >> docs/index.md
          out=$(python -m pytest --cov=src tests/) && echo "$out" >> docs/index.md
          exit_status="$?"
          echo "\`\`\`" >> docs/index.md
          echo "coverage report:"
          echo "$out"
          echo "exit status: $exit_status"
          exit $exit_status

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material 
      - run: mkdocs gh-deploy --force